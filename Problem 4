 Problem Statement 
 Visa is evaluating its partnership with ApplePay. The goal is to calculate the total transaction volume for each merchant where the transaction was done via ApplePay.

ðŸ“˜ Clarifications:
=>Output the merchant_id and total ApplePay transactions.
=>For merchants with no ApplePay usage, output their total as 0.
=>Sort the results by total transaction volume in descending order.
Watch out for case sensitivity in payment_method values (e.g., 'apple pay', 'Apple Pay').


ðŸ“Š Sample Input Table: transactions

| Merchant_id | Transaction_amount | Payment_method  |
|------------- |-------------------- |------------------- |
| 1       | 600         | Contactless Chip |
| 1       | 850         | apple pay     |
| 1       | 500         | Apple Pay     |
| 2       | 560         | Magstripe     |
| 2       | 400         | Samsung Pay    |
| 4       | 1200         | apple pay     |



ðŸ§  Approach:

* Identified all distinct merchants (merchant_id) â€” even those not using ApplePay.
* Aggregate transaction_amount only for ApplePay transactions.
* Use a LEFT JOIN to include merchants with 0 ApplePay volume.
* Use COALESCE to replace nulls with 0.
Sort the result by volume in descending order.

WITH all_merchants AS (
 SELECT DISTINCT merchant_id FROM transactions
),
applepay_volume AS (
 SELECT 
 merchant_id, 
 SUM(transaction_amount) AS total_transaction
 FROM transactions
 WHERE LOWER(payment_method) LIKE '%apple%'
 GROUP BY merchant_id
)

SELECT 
 m.merchant_id,
 COALESCE(a.total_transaction, 0) AS total_transaction
FROM all_merchants m
LEFT JOIN applepay_volume a ON m.merchant_id = a.merchant_id
ORDER BY total_transaction DESC;
